name: Salesforce CI/CD

# Trigger workflow whenever code is pushed to "main" branch
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ---------------------------------------------------------
      # STEP 1: Checkout your source code from GitHub repo
      # ---------------------------------------------------------
      - name: Checkout Repository
        uses: actions/checkout@v3

      # ---------------------------------------------------------
      # STEP 2: Setup Node.js (needed to install Salesforce CLI)
      # ---------------------------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # ---------------------------------------------------------
      # STEP 3: Install Salesforce CLI globally using npm
      # ---------------------------------------------------------
      - name: Install Salesforce CLI
        run: npm install sfdx-cli --global

      # ---------------------------------------------------------
      # STEP 4: Authenticate to your Dev Hub org using JWT
      # - Requires GitHub secrets:
      #   CONSUMER_KEY  = Connected App Consumer Key
      #   SF_USERNAME   = Dev Hub username (e.g. yourname@domain.com)
      # - Requires private key file "assets/server.key"
      # ---------------------------------------------------------
      - name: Authenticate Dev Hub
        run: |
          echo "üîë Authenticating with Dev Hub..."
          sfdx auth:jwt:grant \
            --clientid ${{ secrets.CONSUMER_KEY }} \
            --jwtkeyfile assets/server.key \
            --username ${{ secrets.SF_USERNAME }} \
            --setdefaultdevhubusername -a DevHub || exit 1
          echo "‚úÖ Authentication complete"

      # ---------------------------------------------------------
      # STEP 5: Verify Dev Hub authentication worked
      # This will list all authenticated orgs in the runner
      # Look for "DevHub" in the output
      # ---------------------------------------------------------
      - name: Verify Dev Hub Auth
        run: |
          echo "üìã Listing authenticated orgs..."
          sfdx force:org:list

      # ---------------------------------------------------------
      # STEP 6: Create a new Scratch Org
      # - Uses your config/project-scratch-def.json definition
      # - Alias: ScratchOrg
      # - Duration: 7 days
      # ---------------------------------------------------------
      - name: Create Scratch Org
        run: |
          echo "üèóÔ∏è Creating Scratch Org..."
          sfdx force:org:create \
            -f config/project-scratch-def.json \
            -a ScratchOrg \
            -s \
            -d 7 \
            -v DevHub

      # ---------------------------------------------------------
      # STEP 7: Push source code from repo into Scratch Org
      # ---------------------------------------------------------
      - name: Push Source to Scratch Org
        run: |
          echo "üöÄ Pushing metadata to Scratch Org..."
          sfdx force:source:push -u ScratchOrg

      # ---------------------------------------------------------
      # STEP 8: Run all Apex tests in the Scratch Org
      # ---------------------------------------------------------
      - name: Run Apex Tests
        run: |
          echo "üß™ Running Apex tests..."
          sfdx force:apex:test:run \
            --resultformat human \
            --wait 10 \
            -u ScratchOrg

      # ---------------------------------------------------------
      # STEP 9: Delete the Scratch Org to save license usage
      # ---------------------------------------------------------
      - name: Delete Scratch Org
        run: |
          echo "üßπ Cleaning up (deleting Scratch Org)..."
          sfdx force:org:delete -u ScratchOrg -p
